name: Deploy Flutter App to TestFlight

on:
  push:
    branches:
      - main
      - develop

jobs:
  IOS_BUILD_AND_DISTRIBUTE:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install apple certificate
        run: |
          base64 --decode < ${GITHUB_WORKSPACE}/encodedp12.txt > ${GITHUB_WORKSPACE}/certificate.p12
          security create-keychain -p temp_password build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p temp_password build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security import ${GITHUB_WORKSPACE}/certificate.p12 -k build.keychain -P "123456" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k temp_password build.keychain
          security find-identity -vp codesigning build.keychain

      - name: Build iOS app
        run: |
          cd ios
          pod install
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath $PWD/build/Runner.xcarchive CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY="iPhone Developer" PROVISIONING_PROFILE_SPECIFIER=""


      - name: Install provisioning profile
        run: |
          base64 --decode < ${GITHUB_WORKSPACE}/encodedCIONE.txt > ${GITHUB_WORKSPACE}/profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ${GITHUB_WORKSPACE}/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      - name: Clean and install dependencies
        run: |
          flutter clean
          flutter pub get

      - name: Install Cocoapods
        run: sudo gem install cocoapods

      - name: Prepare Cocoapods
        run: |
          cd ios
          pod deintegrate
          pod install --repo-update

      - name: Build Flutter app for iOS
        run: |
          flutter build ios --release --no-codesign

      - name: List contents of the iOS directory
        run: |
          ls -al ios/

      - name: Build iOS app
        run: |
          cd ios
          if [ -e "Runner.xcworkspace" ]; then
            xcodebuild -workspace Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath $PWD/build/Runner.xcarchive
          else
            echo "Runner.xcworkspace does not exist."
            exit 1
          fi

      - name: Upload to TestFlight
        run: |
          xcrun altool --upload-app -f $PWD/build/Runner.xcarchive/Products/Applications/Runner.app -t ios -u user@example.com -p app-specific-password
